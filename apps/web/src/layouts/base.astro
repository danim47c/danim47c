---
interface Props {
  title?: string
}

const { title = "danim47c" } = Astro.props

interface HeaderLink {
  href: string
  text: string
  external?: boolean
}

const headerLinks: HeaderLink[] = [
  { text: "Home", href: "/" },
  { text: "Blog", href: "https://dev.to/danim47c", external: true },
]
---

<html lang="en">
  <script is:inline>
    const offsetToMinize = 100

    let header
    document.addEventListener("scroll", () => {
      if (!header) {
        header = document.querySelector("header")
      }

      if (window.scrollY > offsetToMinize) {
        if (header.classList.contains("maximized")) {
          header.classList.replace("maximized", "minimized")
        }
      } else {
        if (window.scrollY <= 0) {
          header.classList.replace("minimized", "maximized")
        }
      }
    })
  </script>

  <title>{title}</title>

  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="title" content="danim47c" />
  <meta
    name="description"
    content="Daniel Mateos Carballares - Desarollador Fullstack"
  />

  <!-- Open Graph / Facebook -->
  <meta property="og:url" content="https://danim47c.dev/" />
  <meta property="og:title" content="danim47c" />
  <meta
    property="og:description"
    content="Daniel Mateos Carballares - Desarollador Fullstack"
  />
  <meta property="og:image" content="/profile.webp" />
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content="https://danim47c.dev/" />
  <meta property="twitter:title" content="danim47c" />
  <meta
    property="twitter:description"
    content="Daniel Mateos Carballares - Desarollador Fullstack"
  />
  <meta property="twitter:image" content="/profile.webp" />

  <link
    rel="apple-touch-icon"
    sizes="57x57"
    href="/icons/apple-icon-57x57.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="60x60"
    href="/icons/apple-icon-60x60.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="72x72"
    href="/icons/apple-icon-72x72.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="76x76"
    href="/icons/apple-icon-76x76.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="114x114"
    href="/icons/apple-icon-114x114.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="120x120"
    href="/icons/apple-icon-120x120.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="144x144"
    href="/icons/apple-icon-144x144.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="152x152"
    href="/icons/apple-icon-152x152.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="180x180"
    href="/icons/apple-icon-180x180.png"
  />
  <link
    rel="icon"
    type="image/png"
    sizes="192x192"
    href="/icons/android-icon-192x192.png"
  />
  <link
    rel="icon"
    type="image/png"
    sizes="32x32"
    href="/icons/favicon-32x32.png"
  />
  <link
    rel="icon"
    type="image/png"
    sizes="96x96"
    href="/icons/favicon-96x96.png"
  />
  <link
    rel="icon"
    type="image/png"
    sizes="16x16"
    href="/icons/favicon-16x16.png"
  />
  <link rel="manifest" href="/manifest.json" />
  <meta name="msapplication-TileColor" content="#ffffff" />
  <meta name="msapplication-TileImage" content="/ms-icon-144x144.png" />
  <meta name="theme-color" content="#ffffff" />

  <body>
    <header class="maximized">
      <h1>danim47c</h1>

      <ul>
        {
          headerLinks.map(({ text, href, external }) => (
            <li>
              <a target={external ? "_blank" : ""} href={href} rel="noreferrer">{text}</a>
            </li>
          ))
        }
      </ul>
    </header>

    <slot />
    <style is:global>
      @font-face {
        font-family: SourceSansPro;
        src: url("/fonts/SourceSansPro/SourceSansPro-Regular.otf")
          format("opentype");
        font-weight: 500;
      }
      @font-face {
        font-family: "SourceSansPro";
        src: url("/fonts/SourceSansPro/SourceSansPro-Bold.otf")
          format("opentype");
        font-weight: 700;
      }
      @font-face {
        font-family: "SourceSansPro";
        src: url("/fonts/SourceSansPro/SourceSansPro-Light.otf")
          format("opentype");
        font-weight: 300;
      }

      :root {
        --color-primary: #fcfcfc;
        --color-secondary: #1a1a1a;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;

        font-family: SourceSansPro, Arial, Helvetica, sans-serif;

        color: var(--color-secondary);
      }

      html {
        background-color: var(--color-primary);

        scroll-behavior: smooth;
      }
    </style>

    <style lang="scss">
      header {
        position: sticky;
        top: 0;

        background-color: var(--color-primary);

        margin-bottom: 3rem;
        padding: 2rem 0;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        column-gap: 2rem;
        row-gap: 1.5rem;
        flex-wrap: wrap;

        transition: all ease-out 400ms;

        h1 {
          padding: 0 0.5rem;

          font-weight: 300;
          font-size: 3em;
        }

        ul {
          padding: 0 0.5rem;

          display: flex;
          column-gap: 1rem;
          align-items: center;
          justify-content: center;

          list-style: none;

          a {
            font-size: 1.1em;

            text-decoration: none;
          }
        }

        &.minimized {
          padding: 1rem 0;

          flex-direction: row;
          column-gap: 5rem;
          row-gap: 0.5rem;
        }
      }
    </style>
  </body>
</html>
